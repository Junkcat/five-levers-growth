import { serve } from "https://deno.land/std@0.224.0/http/server.ts";

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Methods": "POST, OPTIONS",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

const TG_TOKEN = "8120833901:AAETeqkfLA_ynt-E0fShaDD8KtXc3CyroRs";
const TG_CHAT_ID = 7778603;

serve(async (req) => {
  if (req.method === "OPTIONS") {
    return new Response("ok", { headers: corsHeaders });
  }

  try {
    const { company, name, contact, requestType } = await req.json();

    console.log("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:", { company, name, contact, requestType });

    const text =
      `üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: ${requestType || "-"}\n\n` +
      `üìä –ö–æ–º–ø–∞–Ω–∏—è: ${company || "-"}\n` +
      `üë§ –§–ò–û: ${name || "-"}\n` +
      `üìß –ö–æ–Ω—Ç–∞–∫—Ç: ${contact || "-"}`;

    const tgUrl = `https://api.telegram.org/bot${TG_TOKEN}/sendMessage`;

    console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...");

    const tgResp = await fetch(tgUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: TG_CHAT_ID,
        text: text,
        parse_mode: "HTML",
      }),
    });

    const tgJson = await tgResp.json();
    console.log("–û—Ç–≤–µ—Ç –æ—Ç Telegram:", tgJson);

    if (!tgResp.ok || tgJson?.ok === false) {
      console.error("–û—à–∏–±–∫–∞ Telegram API:", tgJson);
      return new Response(
        JSON.stringify({ 
          error: "Telegram API error", 
          details: tgJson 
        }),
        {
          status: 502,
          headers: { ...corsHeaders, "Content-Type": "application/json" },
        }
      );
    }

    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");

    return new Response(
      JSON.stringify({ success: true, message: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" }),
      {
        status: 200,
        headers: { ...corsHeaders, "Content-Type": "application/json" },
      }
    );
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏:", err);
    return new Response(
      JSON.stringify({ error: String(err) }),
      {
        status: 400,
        headers: { ...corsHeaders, "Content-Type": "application/json" },
      }
    );
  }
});
